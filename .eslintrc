{
  "extends": [
    "amo",
    "plugin:amo/typescript",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "env": {
    "node": true
  },
  "rules": {
    "import/no-extraneous-dependencies": ["error", {
        "devDependencies": [
            "**/*.spec.*",
            "tests/helpers.ts"
        ]
      }
    ],
    // Disabled due to https://github.com/import-js/eslint-plugin-import/issues/2104
    "import/extensions": [0, "never"],
    // This rule conflicts with our convention.
    "jest/valid-describe": "off",
    // This is not needed for this project.
    "amo/only-tsx-files": off,
    // We decided to prefer types over interfaces.
    "@typescript-eslint/prefer-interface": "off",
    // Report an error when a variable is not used.
    "@typescript-eslint/no-unused-vars": "error",
    // The beauty of TS is that it infers types quite well, so let's not write
    // too much code.
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-member-accessibility": "off",
    // This is sad but we have to disable this rule to allow TS to generate
    // correct a ESM package.
    "import/no-unresolved": "off",
    // This rule is annoying and does not add any value.
    "@typescript-eslint/camelcase": "off",
    "@typescript-eslint/ban-ts-comment": ["error", {
      "ts-expect-error": "allow-with-description",
    }]
  }
}
